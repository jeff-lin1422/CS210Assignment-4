SQL Queries

1. 
select genre, count(genre) as 'number_of_songs'
from song
group by genre
order by count(genre) desc limit 3

2.
select artist as artist_name from song
where album = '' and artist in (select distinct artist from song where album <> '')

3.
select album_title as album_name, avg(album_rating) as average_user_rating
from album_rating
where year(album_rat_date) > 1990 and year(album_rat_date) < 1996
group by album_title, artist
order by album_title asc limit 10

4.
SELECT genre AS "genre_name", COUNT(genre) AS "number_of_song_ratings" FROM song_rating sr 
	JOIN song s ON sr.song_title = s.song_title AND sr.artist = s.artist
    WHERE year(s.release_date) >= 1991 and year(s.release_date) <= 1995 GROUP BY genre
    ORDER BY COUNT(genre) DESC LIMIT 3; 

5.
SELECT pl.user_name AS "username", pl.playlist_title, AVG(song_rating) AS 'average_song_rating' FROM playlist pl 
JOIN song_rating sr ON pl.user_name=sr.user_name
AND pl.song_title = sr.song_title AND pl.artist = sr.artist GROUP BY playlist_title
HAVING AVG(song_rating) >= 4.0;

6.
# we dont care about individual ratings of song or album, so as long as a user rated something
# the union of the two tables will have all the ratings of users
# the result will have two jeff_lin because one of them contains space
SELECT song_title, user_name AS 'username', COUNT(song_rating) AS 'number of rating' FROM
	(SELECT * FROM cs210.song_rating sr UNION SELECT * FROM cs210.album_rating) t1
    GROUP BY user_name LIMIT 5;
